# Represent overhead capacity for pods by simulating PodHeadroom pods
# SatisfiedBy is not included here since this capacity will always be used as warm pool capacity
# on top of existing cluster capacity and won't be used up by pods
apiVersion: apps.kubernetes.io/v1alpha1
kind: PodHeadroom
metadata:
  name: pods
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        headroom: pods
    spec:
      containers:
        - cpu: 1
          memory: 1Gi
      topologySpreadConstraints:
        - maxSkew: 1
          minDomains: 3
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              headroom: pods
status:
  conditions:
    - type: CapacityAvailable
      status: True
      reason: CapacityAvailable
      message: ""
    - type: Ready
      status: True
      reason: Ready
      message: ""