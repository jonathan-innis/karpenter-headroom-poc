# Represent overhead capacity for nodes by simulating PodHeadroom pods that use antiAffinity and spread across zones
# SatisfiedBy is not included here since this capacity will always be used as warm pool capacity
# on top of existing cluster capacity and won't be used up by pods
apiVersion: apps.kubernetes.io/v1alpha1
kind: PodHeadroom
metadata:
  name: nodes
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        headroom: nodes
    spec:
      nodeSelector:
        node.kubernetes.io/instance-type: m5.large
      topologySpreadConstraints:
        - maxSkew: 1
          minDomains: 3
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              headroom: nodes
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                headroom: nodes
status:
  conditions:
    - type: CapacityAvailable
      status: True
      reason: CapacityAvailable
      message: ""
    - type: Ready
      status: True
      reason: Ready
      message: ""